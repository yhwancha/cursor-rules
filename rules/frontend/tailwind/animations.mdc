---
description: 
globs: 
alwaysApply: false
---
# Tailwind Animations & Interactions

You are an expert at creating smooth animations and interactions with Tailwind CSS.

## Hover & Focus States

```tsx
// ✅ Button hover effects
<button className="
  bg-blue-600 text-white px-4 py-2 rounded-md
  hover:bg-blue-700 hover:scale-105
  focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
  active:scale-95
  transition-all duration-200 ease-in-out
">
  Interactive Button
</button>

// ✅ Card hover effects
<div className="
  bg-white rounded-lg shadow-md
  hover:shadow-xl hover:-translate-y-1
  transition-all duration-300 ease-out
  cursor-pointer
">
  Hoverable Card
</div>

// ✅ Link hover effects
<a className="
  text-blue-600 underline-offset-4
  hover:text-blue-800 hover:underline
  transition-colors duration-200
">
  Animated Link
</a>
```

## Loading Animations

```tsx
// ✅ Spinner
<div className="
  animate-spin rounded-full h-8 w-8 
  border-2 border-gray-300 border-t-blue-600
">
</div>

// ✅ Pulse loading
<div className="animate-pulse">
  <div className="h-4 bg-gray-300 rounded w-3/4 mb-2"></div>
  <div className="h-4 bg-gray-300 rounded w-1/2 mb-2"></div>
  <div className="h-4 bg-gray-300 rounded w-5/6"></div>
</div>

// ✅ Bounce loading dots
<div className="flex space-x-1">
  <div className="w-2 h-2 bg-blue-600 rounded-full animate-bounce"></div>
  <div className="w-2 h-2 bg-blue-600 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
  <div className="w-2 h-2 bg-blue-600 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
</div>

// ✅ Progress bar animation
<div className="w-full bg-gray-200 rounded-full h-2">
  <div className="
    bg-blue-600 h-2 rounded-full
    transition-all duration-500 ease-out
  " style={{width: `${progress}%`}}>
  </div>
</div>
```

## Entrance Animations

```tsx
// ✅ Fade in from bottom
<div className="
  opacity-0 translate-y-4
  animate-[fadeInUp_0.5s_ease-out_forwards]
">
  Content that fades in
</div>

// ✅ Scale in animation
<div className="
  transform scale-0
  animate-[scaleIn_0.3s_ease-out_forwards]
">
  Content that scales in
</div>

// ✅ Slide in from left
<div className="
  transform -translate-x-full
  animate-[slideInLeft_0.4s_ease-out_forwards]
">
  Content that slides in
</div>
```

## Interactive Components

```tsx
// ✅ Animated toggle
<button 
  className={`
    relative inline-flex h-6 w-11 items-center rounded-full
    transition-colors duration-200 ease-in-out
    ${enabled ? 'bg-blue-600' : 'bg-gray-200'}
  `}
  onClick={() => setEnabled(!enabled)}
>
  <span className={`
    inline-block h-4 w-4 rounded-full bg-white shadow
    transition-transform duration-200 ease-in-out
    ${enabled ? 'translate-x-6' : 'translate-x-1'}
  `} />
</button>

// ✅ Accordion animation
<div className="border rounded-md">
  <button 
    className="w-full p-4 text-left hover:bg-gray-50 transition-colors"
    onClick={() => setOpen(!open)}
  >
    <div className="flex justify-between items-center">
      <span>Accordion Title</span>
      <span className={`
        transform transition-transform duration-200
        ${open ? 'rotate-180' : 'rotate-0'}
      `}>
        ▼
      </span>
    </div>
  </button>
  <div className={`
    overflow-hidden transition-all duration-300 ease-in-out
    ${open ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'}
  `}>
    <div className="p-4 border-t">
      Accordion content
    </div>
  </div>
</div>
```

## Modal & Overlay Animations

```tsx
// ✅ Modal with backdrop animation
<div className={`
  fixed inset-0 z-50 transition-opacity duration-300
  ${isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'}
`}>
  {/* Backdrop */}
  <div className="fixed inset-0 bg-black/50 transition-opacity" />
  
  {/* Modal */}
  <div className="fixed inset-0 flex items-center justify-center p-4">
    <div className={`
      bg-white rounded-lg shadow-xl max-w-md w-full
      transform transition-all duration-300
      ${isOpen ? 'scale-100 opacity-100' : 'scale-95 opacity-0'}
    `}>
      Modal content
    </div>
  </div>
</div>

// ✅ Toast notification
<div className={`
  fixed top-4 right-4 z-50
  bg-green-500 text-white px-4 py-2 rounded-md shadow-lg
  transform transition-all duration-300
  ${show ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}
`}>
  Toast message
</div>
```

## Custom Animations (tailwind.config.js)

```tsx
// Add to tailwind.config.js
module.exports = {
  theme: {
    extend: {
      animation: {
        'fadeInUp': 'fadeInUp 0.5s ease-out forwards',
        'scaleIn': 'scaleIn 0.3s ease-out forwards',
        'slideInLeft': 'slideInLeft 0.4s ease-out forwards',
        'wiggle': 'wiggle 1s ease-in-out infinite',
        'float': 'float 3s ease-in-out infinite',
        'gradient': 'gradient 3s ease infinite',
      },
      keyframes: {
        fadeInUp: {
          '0%': { opacity: '0', transform: 'translateY(20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        scaleIn: {
          '0%': { transform: 'scale(0)' },
          '100%': { transform: 'scale(1)' },
        },
        slideInLeft: {
          '0%': { transform: 'translateX(-100%)' },
          '100%': { transform: 'translateX(0)' },
        },
        wiggle: {
          '0%, 100%': { transform: 'rotate(-3deg)' },
          '50%': { transform: 'rotate(3deg)' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0px)' },
          '50%': { transform: 'translateY(-10px)' },
        },
        gradient: {
          '0%, 100%': { backgroundPosition: '0% 50%' },
          '50%': { backgroundPosition: '100% 50%' },
        }
      }
    }
  }
}
```

## Performance Tips

```tsx
// ✅ Use transform for better performance
// Good: transform properties
className="hover:scale-105 transition-transform"

// Avoid: layout-triggering properties
className="hover:w-64 transition-all" // Can cause layout shift

// ✅ Prefer GPU-accelerated properties
const gpuProperties = [
  'transform',    // translate, rotate, scale
  'opacity',      // fade effects
  'filter',       // blur, brightness, etc.
]

// ✅ Use will-change for complex animations
className="will-change-transform hover:scale-110"
```

## Stagger Animations

```tsx
// ✅ Staggered list animation
{items.map((item, index) => (
  <div 
    key={item.id}
    className="opacity-0 translate-y-4 animate-[fadeInUp_0.5s_ease-out_forwards]"
    style={{ animationDelay: `${index * 0.1}s` }}
  >
    {item.content}
  </div>
))}
```

